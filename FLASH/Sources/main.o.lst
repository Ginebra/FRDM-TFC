   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC3:
  20 0000 0D0A00   		.ascii	"\015\012\000"
  21 0003 00       		.align	2
  22              	.LC5:
  23 0004 4C3A00   		.ascii	"L:\000"
  24 0007 00       		.align	2
  25              	.LC8:
  26 0008 25782C00 		.ascii	"%x,\000"
  27              		.global	__aeabi_i2f
  28              		.global	__aeabi_fdiv
  29              		.section	.text.main,"ax",%progbits
  30              		.align	2
  31              		.global	main
  32              		.code	16
  33              		.thumb_func
  35              	main:
  36              	.LFB0:
  37              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** #include "derivative.h" /* include peripheral declarations */
   2:../Sources/main.c **** #include "TFC\TFC.h"
   3:../Sources/main.c **** 
   4:../Sources/main.c **** int main(void)
   5:../Sources/main.c **** {
  38              		.loc 1 5 0
  39              		.cfi_startproc
  40 0000 90B5     		push	{r4, r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 12
  43              		.cfi_offset 4, -12
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 87B0     		sub	sp, sp, #28
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 40
  49 0004 00AF     		add	r7, sp, #0
  50              	.LCFI2:
  51              		.cfi_def_cfa_register 7
   6:../Sources/main.c ****    uint32_t t,i=0, ana=0;
  52              		.loc 1 6 0
  53 0006 0023     		mov	r3, #0
  54 0008 3B61     		str	r3, [r7, #16]
  55 000a 0023     		mov	r3, #0
  56 000c FB60     		str	r3, [r7, #12]
   7:../Sources/main.c ****    int guardar,dato=0;
  57              		.loc 1 7 0
  58 000e 0023     		mov	r3, #0
  59 0010 7B60     		str	r3, [r7, #4]
   8:../Sources/main.c ****    float roberto;
   9:../Sources/main.c ****    //int32_t guardar;
  10:../Sources/main.c ****    
  11:../Sources/main.c ****    TFC_Init();
  60              		.loc 1 11 0
  61 0012 FFF7FEFF 		bl	TFC_Init
  62              	.L22:
  12:../Sources/main.c ****    
  13:../Sources/main.c ****    for(;;)
  14:../Sources/main.c ****    {      
  15:../Sources/main.c ****       //TFC_Task must be called in your main loop.  This keeps certain processing happy (I.E. Seria
  16:../Sources/main.c ****          TFC_Task();
  63              		.loc 1 16 0
  64 0016 FFF7FEFF 		bl	TFC_Task
  17:../Sources/main.c **** 
  18:../Sources/main.c ****          //This Demo program will look at the middle 2 switch to select one of 4 demo modes.
  19:../Sources/main.c ****          //Let's look at the middle 2 switches
  20:../Sources/main.c ****          switch(dato)
  65              		.loc 1 20 0
  66 001a 7B68     		ldr	r3, [r7, #4]
  67 001c 022B     		cmp	r3, #2
  68 001e 4FD0     		beq	.L4
  69 0020 032B     		cmp	r3, #3
  70 0022 00D1     		bne	.LCB30
  71 0024 72E0     		b	.L5	@long jump
  72              	.LCB30:
  73 0026 012B     		cmp	r3, #1
  74 0028 14D0     		beq	.L3
  21:../Sources/main.c ****          {
  22:../Sources/main.c ****          default:
  23:../Sources/main.c ****          case 0 :
  24:../Sources/main.c ****         	 TFC_SetMotorPWM(0,0);
  75              		.loc 1 24 0
  76 002a 0022     		mov	r2, #0
  77 002c 0023     		mov	r3, #0
  78 002e 101C     		add	r0, r2, #0
  79 0030 191C     		add	r1, r3, #0
  80 0032 FFF7FEFF 		bl	TFC_SetMotorPWM
  25:../Sources/main.c ****         	 TFC_SetServo(0,0);
  81              		.loc 1 25 0
  82 0036 0023     		mov	r3, #0
  83 0038 0020     		mov	r0, #0
  84 003a 191C     		add	r1, r3, #0
  85 003c FFF7FEFF 		bl	TFC_SetServo
  26:../Sources/main.c ****             //Demo mode 0 just tests the switches and LED's
  27:../Sources/main.c ****             if(TFC_PUSH_BUTTON_1_PRESSED)
  86              		.loc 1 27 0
  87 0040 7C4B     		ldr	r3, .L26
  88 0042 1A69     		ldr	r2, [r3, #16]
  89 0044 8023     		mov	r3, #128
  90 0046 9B02     		lsl	r3, r3, #10
  91 0048 1340     		and	r3, r2
  92 004a 00D1     		bne	.LCB48
  93 004c EBE0     		b	.L23	@long jump
  94              	.LCB48:
  28:../Sources/main.c ****                dato=3;
  95              		.loc 1 28 0
  96 004e 0323     		mov	r3, #3
  97 0050 7B60     		str	r3, [r7, #4]
  29:../Sources/main.c ****             
  30:../Sources/main.c ****             break;
  98              		.loc 1 30 0
  99 0052 E8E0     		b	.L23
 100              	.L3:
  31:../Sources/main.c ****                
  32:../Sources/main.c ****          case 1:
  33:../Sources/main.c ****             
  34:../Sources/main.c ****             //Demo mode 1 will just move the servos with the on-board potentiometers
  35:../Sources/main.c ****             if(TFC_Ticker[0]>=20)
 101              		.loc 1 35 0
 102 0054 784B     		ldr	r3, .L26+4
 103 0056 1B68     		ldr	r3, [r3]
 104 0058 132B     		cmp	r3, #19
 105 005a 12D9     		bls	.L8
  36:../Sources/main.c ****             {
  37:../Sources/main.c ****                TFC_Ticker[0] = 0; //reset the Ticker
 106              		.loc 1 37 0
 107 005c 764B     		ldr	r3, .L26+4
 108 005e 0022     		mov	r2, #0
 109 0060 1A60     		str	r2, [r3]
  38:../Sources/main.c ****                //Every 20 mSeconds, update the Servos
  39:../Sources/main.c ****                TFC_SetServo(0,TFC_ReadPot(0));
 110              		.loc 1 39 0
 111 0062 0020     		mov	r0, #0
 112 0064 FFF7FEFF 		bl	TFC_ReadPot
 113 0068 031C     		add	r3, r0, #0
 114 006a 0020     		mov	r0, #0
 115 006c 191C     		add	r1, r3, #0
 116 006e FFF7FEFF 		bl	TFC_SetServo
  40:../Sources/main.c ****                TFC_SetServo(1,TFC_ReadPot(1));
 117              		.loc 1 40 0
 118 0072 0120     		mov	r0, #1
 119 0074 FFF7FEFF 		bl	TFC_ReadPot
 120 0078 031C     		add	r3, r0, #0
 121 007a 0120     		mov	r0, #1
 122 007c 191C     		add	r1, r3, #0
 123 007e FFF7FEFF 		bl	TFC_SetServo
 124              	.L8:
  41:../Sources/main.c ****             }
  42:../Sources/main.c ****             //Let's put a pattern on the LEDs
  43:../Sources/main.c ****             if(TFC_Ticker[1] >= 125)
 125              		.loc 1 43 0
 126 0082 6D4B     		ldr	r3, .L26+4
 127 0084 5B68     		ldr	r3, [r3, #4]
 128 0086 7C2B     		cmp	r3, #124
 129 0088 0FD9     		bls	.L9
  44:../Sources/main.c ****             {
  45:../Sources/main.c ****                TFC_Ticker[1] = 0;
 130              		.loc 1 45 0
 131 008a 6B4B     		ldr	r3, .L26+4
 132 008c 0022     		mov	r2, #0
 133 008e 5A60     		str	r2, [r3, #4]
  46:../Sources/main.c ****                t++;
 134              		.loc 1 46 0
 135 0090 7B69     		ldr	r3, [r7, #20]
 136 0092 0133     		add	r3, r3, #1
 137 0094 7B61     		str	r3, [r7, #20]
  47:../Sources/main.c ****                if(t>4)
 138              		.loc 1 47 0
 139 0096 7B69     		ldr	r3, [r7, #20]
 140 0098 042B     		cmp	r3, #4
 141 009a 01D9     		bls	.L10
  48:../Sources/main.c ****                {
  49:../Sources/main.c ****                   t=0;
 142              		.loc 1 49 0
 143 009c 0023     		mov	r3, #0
 144 009e 7B61     		str	r3, [r7, #20]
 145              	.L10:
  50:../Sources/main.c ****                }         
  51:../Sources/main.c ****                TFC_SetBatteryLED_Level(t);
 146              		.loc 1 51 0
 147 00a0 7B69     		ldr	r3, [r7, #20]
 148 00a2 DBB2     		uxtb	r3, r3
 149 00a4 181C     		mov	r0, r3
 150 00a6 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 151              	.L9:
  52:../Sources/main.c ****             }
  53:../Sources/main.c ****             
  54:../Sources/main.c ****             TFC_SetMotorPWM(0,0); //Make sure motors are off
 152              		.loc 1 54 0
 153 00aa 0022     		mov	r2, #0
 154 00ac 0023     		mov	r3, #0
 155 00ae 101C     		add	r0, r2, #0
 156 00b0 191C     		add	r1, r3, #0
 157 00b2 FFF7FEFF 		bl	TFC_SetMotorPWM
  55:../Sources/main.c ****             TFC_HBRIDGE_DISABLE;
 158              		.loc 1 55 0
 159 00b6 614B     		ldr	r3, .L26+8
 160 00b8 8022     		mov	r2, #128
 161 00ba 9203     		lsl	r2, r2, #14
 162 00bc 9A60     		str	r2, [r3, #8]
  56:../Sources/main.c ****          
  57:../Sources/main.c **** 
  58:../Sources/main.c ****             break;
 163              		.loc 1 58 0
 164 00be B7E0     		b	.L7
 165              	.L4:
  59:../Sources/main.c ****             
  60:../Sources/main.c ****          case 2 :
  61:../Sources/main.c ****             
  62:../Sources/main.c ****             //Demo Mode 2 will use the Pots to make the motors move
  63:../Sources/main.c ****             TFC_HBRIDGE_ENABLE;
 166              		.loc 1 63 0
 167 00c0 5E4B     		ldr	r3, .L26+8
 168 00c2 8022     		mov	r2, #128
 169 00c4 9203     		lsl	r2, r2, #14
 170 00c6 5A60     		str	r2, [r3, #4]
  64:../Sources/main.c ****             TFC_SetMotorPWM(TFC_ReadPot(0),TFC_ReadPot(0));
 171              		.loc 1 64 0
 172 00c8 0020     		mov	r0, #0
 173 00ca FFF7FEFF 		bl	TFC_ReadPot
 174 00ce 041C     		add	r4, r0, #0
 175 00d0 0020     		mov	r0, #0
 176 00d2 FFF7FEFF 		bl	TFC_ReadPot
 177 00d6 031C     		add	r3, r0, #0
 178 00d8 201C     		add	r0, r4, #0
 179 00da 191C     		add	r1, r3, #0
 180 00dc FFF7FEFF 		bl	TFC_SetMotorPWM
  65:../Sources/main.c ****                   
  66:../Sources/main.c ****             //Let's put a pattern on the LEDs
  67:../Sources/main.c ****             if(TFC_Ticker[1] >= 125)
 181              		.loc 1 67 0
 182 00e0 554B     		ldr	r3, .L26+4
 183 00e2 5B68     		ldr	r3, [r3, #4]
 184 00e4 7C2B     		cmp	r3, #124
 185 00e6 00D8     		bhi	.LCB128
 186 00e8 9FE0     		b	.L24	@long jump
 187              	.LCB128:
  68:../Sources/main.c ****                {
  69:../Sources/main.c ****                   TFC_Ticker[1] = 0;
 188              		.loc 1 69 0
 189 00ea 534B     		ldr	r3, .L26+4
 190 00ec 0022     		mov	r2, #0
 191 00ee 5A60     		str	r2, [r3, #4]
  70:../Sources/main.c ****                      t++;
 192              		.loc 1 70 0
 193 00f0 7B69     		ldr	r3, [r7, #20]
 194 00f2 0133     		add	r3, r3, #1
 195 00f4 7B61     		str	r3, [r7, #20]
  71:../Sources/main.c ****                      if(t>4)
 196              		.loc 1 71 0
 197 00f6 7B69     		ldr	r3, [r7, #20]
 198 00f8 042B     		cmp	r3, #4
 199 00fa 01D9     		bls	.L12
  72:../Sources/main.c ****                      {
  73:../Sources/main.c ****                         t=0;
 200              		.loc 1 73 0
 201 00fc 0023     		mov	r3, #0
 202 00fe 7B61     		str	r3, [r7, #20]
 203              	.L12:
  74:../Sources/main.c ****                      }         
  75:../Sources/main.c ****                   TFC_SetBatteryLED_Level(t);
 204              		.loc 1 75 0
 205 0100 7B69     		ldr	r3, [r7, #20]
 206 0102 DBB2     		uxtb	r3, r3
 207 0104 181C     		mov	r0, r3
 208 0106 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
  76:../Sources/main.c ****                }
  77:../Sources/main.c ****             break;
 209              		.loc 1 77 0
 210 010a 8EE0     		b	.L24
 211              	.L5:
  78:../Sources/main.c ****          
  79:../Sources/main.c ****          case 3 :
  80:../Sources/main.c ****         	 
  81:../Sources/main.c ****         	 TFC_HBRIDGE_ENABLE;
 212              		.loc 1 81 0
 213 010c 4B4B     		ldr	r3, .L26+8
 214 010e 8022     		mov	r2, #128
 215 0110 9203     		lsl	r2, r2, #14
 216 0112 5A60     		str	r2, [r3, #4]
  82:../Sources/main.c ****         	 
  83:../Sources/main.c ****         	 if(TFC_PUSH_BUTTON_0_PRESSED){
 217              		.loc 1 83 0
 218 0114 474B     		ldr	r3, .L26
 219 0116 1A69     		ldr	r2, [r3, #16]
 220 0118 8023     		mov	r3, #128
 221 011a 9B01     		lsl	r3, r3, #6
 222 011c 1340     		and	r3, r2
 223 011e 01D0     		beq	.L13
  84:../Sources/main.c ****         	 dato=0;
 224              		.loc 1 84 0
 225 0120 0023     		mov	r3, #0
 226 0122 7B60     		str	r3, [r7, #4]
 227              	.L13:
  85:../Sources/main.c ****         	 }
  86:../Sources/main.c ****         	 
  87:../Sources/main.c ****          ana = 4096;
 228              		.loc 1 87 0
 229 0124 8023     		mov	r3, #128
 230 0126 5B01     		lsl	r3, r3, #5
 231 0128 FB60     		str	r3, [r7, #12]
  88:../Sources/main.c ****     
  89:../Sources/main.c ****          if(TFC_Ticker[0]>100 && LineScanImageReady==1)
 232              		.loc 1 89 0
 233 012a 434B     		ldr	r3, .L26+4
 234 012c 1B68     		ldr	r3, [r3]
 235 012e 642B     		cmp	r3, #100
 236 0130 00D8     		bhi	.LCB171
 237 0132 7CE0     		b	.L25	@long jump
 238              	.LCB171:
 239              		.loc 1 89 0 is_stmt 0
 240 0134 424B     		ldr	r3, .L26+12
 241 0136 1B78     		ldrb	r3, [r3]
 242 0138 DBB2     		uxtb	r3, r3
 243 013a 012B     		cmp	r3, #1
 244 013c 00D0     		beq	.LCB176
 245 013e 76E0     		b	.L25	@long jump
 246              	.LCB176:
  90:../Sources/main.c ****                         {
  91:../Sources/main.c ****                          TFC_Ticker[0] = 0;
 247              		.loc 1 91 0 is_stmt 1
 248 0140 3D4B     		ldr	r3, .L26+4
 249 0142 0022     		mov	r2, #0
 250 0144 1A60     		str	r2, [r3]
  92:../Sources/main.c ****                          LineScanImageReady=0;
 251              		.loc 1 92 0
 252 0146 3E4B     		ldr	r3, .L26+12
 253 0148 0022     		mov	r2, #0
 254 014a 1A70     		strb	r2, [r3]
  93:../Sources/main.c ****                          TERMINAL_PRINTF("\r\n");
 255              		.loc 1 93 0
 256 014c 3D4A     		ldr	r2, .L26+16
 257 014e 3E4B     		ldr	r3, .L26+20
 258 0150 101C     		mov	r0, r2
 259 0152 191C     		mov	r1, r3
 260 0154 FFF7FEFF 		bl	Qprintf
  94:../Sources/main.c ****                          TERMINAL_PRINTF("L:");
 261              		.loc 1 94 0
 262 0158 3A4A     		ldr	r2, .L26+16
 263 015a 3C4B     		ldr	r3, .L26+24
 264 015c 101C     		mov	r0, r2
 265 015e 191C     		mov	r1, r3
 266 0160 FFF7FEFF 		bl	Qprintf
  95:../Sources/main.c ****                          
  96:../Sources/main.c ****                             if(t==0)
 267              		.loc 1 96 0
 268 0164 7B69     		ldr	r3, [r7, #20]
 269 0166 002B     		cmp	r3, #0
 270 0168 02D1     		bne	.L15
  97:../Sources/main.c ****                                t=3;
 271              		.loc 1 97 0
 272 016a 0323     		mov	r3, #3
 273 016c 7B61     		str	r3, [r7, #20]
 274 016e 02E0     		b	.L16
 275              	.L15:
  98:../Sources/main.c ****                             else
  99:../Sources/main.c ****                                t--;
 276              		.loc 1 99 0
 277 0170 7B69     		ldr	r3, [r7, #20]
 278 0172 013B     		sub	r3, r3, #1
 279 0174 7B61     		str	r3, [r7, #20]
 280              	.L16:
 100:../Sources/main.c ****                             
 101:../Sources/main.c ****                             TFC_SetBatteryLED_Level(t);
 281              		.loc 1 101 0
 282 0176 7B69     		ldr	r3, [r7, #20]
 283 0178 DBB2     		uxtb	r3, r3
 284 017a 181C     		mov	r0, r3
 285 017c FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 102:../Sources/main.c ****                            
 103:../Sources/main.c ****                             for(i=0;i<128;i++){
 286              		.loc 1 103 0
 287 0180 0023     		mov	r3, #0
 288 0182 3B61     		str	r3, [r7, #16]
 289 0184 25E0     		b	.L17
 290              	.L19:
 104:../Sources/main.c ****                                       	   TERMINAL_PRINTF("%x,",LineScanImage0[i]);
 291              		.loc 1 104 0
 292 0186 324B     		ldr	r3, .L26+28
 293 0188 1A68     		ldr	r2, [r3]
 294 018a 3B69     		ldr	r3, [r7, #16]
 295 018c 5B00     		lsl	r3, r3, #1
 296 018e D318     		add	r3, r2, r3
 297 0190 1B88     		ldrh	r3, [r3]
 298 0192 9BB2     		uxth	r3, r3
 299 0194 2B49     		ldr	r1, .L26+16
 300 0196 2F4A     		ldr	r2, .L26+32
 301 0198 081C     		mov	r0, r1
 302 019a 111C     		mov	r1, r2
 303 019c 1A1C     		mov	r2, r3
 304 019e FFF7FEFF 		bl	Qprintf
 105:../Sources/main.c ****                                       	   //x hexa, i integer, f float......
 106:../Sources/main.c ****                                       	   if(LineScanImage0[i]<ana){
 305              		.loc 1 106 0
 306 01a2 2B4B     		ldr	r3, .L26+28
 307 01a4 1A68     		ldr	r2, [r3]
 308 01a6 3B69     		ldr	r3, [r7, #16]
 309 01a8 5B00     		lsl	r3, r3, #1
 310 01aa D318     		add	r3, r2, r3
 311 01ac 1B88     		ldrh	r3, [r3]
 312 01ae 9BB2     		uxth	r3, r3
 313 01b0 1A1C     		mov	r2, r3
 314 01b2 FB68     		ldr	r3, [r7, #12]
 315 01b4 9A42     		cmp	r2, r3
 316 01b6 09D2     		bcs	.L18
 107:../Sources/main.c ****                                       		   ana = LineScanImage0[i];
 317              		.loc 1 107 0
 318 01b8 254B     		ldr	r3, .L26+28
 319 01ba 1A68     		ldr	r2, [r3]
 320 01bc 3B69     		ldr	r3, [r7, #16]
 321 01be 5B00     		lsl	r3, r3, #1
 322 01c0 D318     		add	r3, r2, r3
 323 01c2 1B88     		ldrh	r3, [r3]
 324 01c4 9BB2     		uxth	r3, r3
 325 01c6 FB60     		str	r3, [r7, #12]
 108:../Sources/main.c ****                                       	   	   guardar = i;
 326              		.loc 1 108 0
 327 01c8 3B69     		ldr	r3, [r7, #16]
 328 01ca BB60     		str	r3, [r7, #8]
 329              	.L18:
 103:../Sources/main.c ****                             for(i=0;i<128;i++){
 330              		.loc 1 103 0
 331 01cc 3B69     		ldr	r3, [r7, #16]
 332 01ce 0133     		add	r3, r3, #1
 333 01d0 3B61     		str	r3, [r7, #16]
 334              	.L17:
 103:../Sources/main.c ****                             for(i=0;i<128;i++){
 335              		.loc 1 103 0 is_stmt 0
 336 01d2 3B69     		ldr	r3, [r7, #16]
 337 01d4 7F2B     		cmp	r3, #127
 338 01d6 D6D9     		bls	.L19
 109:../Sources/main.c ****                                       	  }
 110:../Sources/main.c ****                             }
 111:../Sources/main.c ****                                          guardar = guardar - 64;
 339              		.loc 1 111 0 is_stmt 1
 340 01d8 BB68     		ldr	r3, [r7, #8]
 341 01da 403B     		sub	r3, r3, #64
 342 01dc BB60     		str	r3, [r7, #8]
 112:../Sources/main.c ****                                          //TERMINAL_PRINTF("\r\n");
 113:../Sources/main.c ****                                          //TERMINAL_PRINTF("%i",guardar);
 114:../Sources/main.c ****                                          TFC_SetServo(0,(float)guardar/64.0f); //Rescale to -1.0 to
 343              		.loc 1 114 0
 344 01de B868     		ldr	r0, [r7, #8]
 345 01e0 FFF7FEFF 		bl	__aeabi_i2f
 346 01e4 031C     		add	r3, r0, #0
 347 01e6 181C     		add	r0, r3, #0
 348 01e8 8521     		mov	r1, #133
 349 01ea C905     		lsl	r1, r1, #23
 350 01ec FFF7FEFF 		bl	__aeabi_fdiv
 351 01f0 031C     		add	r3, r0, #0
 352 01f2 0020     		mov	r0, #0
 353 01f4 191C     		add	r1, r3, #0
 354 01f6 FFF7FEFF 		bl	TFC_SetServo
 115:../Sources/main.c ****                                         
 116:../Sources/main.c ****                  if(guardar < -3 || guardar > 3){
 355              		.loc 1 116 0
 356 01fa BB68     		ldr	r3, [r7, #8]
 357 01fc 0333     		add	r3, r3, #3
 358 01fe 02DB     		blt	.L20
 359              		.loc 1 116 0 is_stmt 0
 360 0200 BB68     		ldr	r3, [r7, #8]
 361 0202 032B     		cmp	r3, #3
 362 0204 06DD     		ble	.L21
 363              	.L20:
 117:../Sources/main.c ****                   TFC_SetMotorPWM(30/100.0f,30/100.0f);
 364              		.loc 1 117 0 is_stmt 1
 365 0206 144A     		ldr	r2, .L26+36
 366 0208 134B     		ldr	r3, .L26+36
 367 020a 101C     		add	r0, r2, #0
 368 020c 191C     		add	r1, r3, #0
 369 020e FFF7FEFF 		bl	TFC_SetMotorPWM
 118:../Sources/main.c ****                  }
 119:../Sources/main.c ****                  else{
 120:../Sources/main.c ****                  TFC_SetMotorPWM(50/100.0f,50/100.0f);
 121:../Sources/main.c ****                  }
 122:../Sources/main.c **** 
 123:../Sources/main.c ****          /*
 124:../Sources/main.c ****          	 if(guardar < 0){
 125:../Sources/main.c ****          		 guardar = guardar*(-1);
 126:../Sources/main.c ****          	 }
 127:../Sources/main.c ****          	 roberto = (float)guardar;
 128:../Sources/main.c ****          	roberto = roberto*(-0.02923) + 32;
 129:../Sources/main.c ****          		TFC_SetMotorPWM(roberto/64.0f,roberto/64.0f); // 0 a 1
 130:../Sources/main.c ****          		TERMINAL_PRINTF("\r\n");
 131:../Sources/main.c ****          		TERMINAL_PRINTF("\r\n");
 132:../Sources/main.c ****          		TERMINAL_PRINTF("%i",roberto/64);
 133:../Sources/main.c ****          		TERMINAL_PRINTF("\r\n");
 134:../Sources/main.c ****          		TERMINAL_PRINTF("\r\n");
 135:../Sources/main.c ****          		TERMINAL_PRINTF("%3.2f",roberto/64.0f);
 136:../Sources/main.c ****          		*/
 137:../Sources/main.c ****          }
 138:../Sources/main.c ****                    
 139:../Sources/main.c ****             break;
 370              		.loc 1 139 0
 371 0212 0CE0     		b	.L25
 372              	.L21:
 120:../Sources/main.c ****                  TFC_SetMotorPWM(50/100.0f,50/100.0f);
 373              		.loc 1 120 0
 374 0214 FC22     		mov	r2, #252
 375 0216 9205     		lsl	r2, r2, #22
 376 0218 FC23     		mov	r3, #252
 377 021a 9B05     		lsl	r3, r3, #22
 378 021c 101C     		add	r0, r2, #0
 379 021e 191C     		add	r1, r3, #0
 380 0220 FFF7FEFF 		bl	TFC_SetMotorPWM
 381              		.loc 1 139 0
 382 0224 03E0     		b	.L25
 383              	.L23:
  30:../Sources/main.c ****             break;
 384              		.loc 1 30 0
 385 0226 C046     		mov	r8, r8
 386 0228 02E0     		b	.L7
 387              	.L24:
  77:../Sources/main.c ****             break;
 388              		.loc 1 77 0
 389 022a C046     		mov	r8, r8
 390 022c 00E0     		b	.L7
 391              	.L25:
 392              		.loc 1 139 0
 393 022e C046     		mov	r8, r8
 394              	.L7:
 140:../Sources/main.c ****          }
 141:../Sources/main.c ****    }
 395              		.loc 1 141 0
 396 0230 F1E6     		b	.L22
 397              	.L27:
 398 0232 C046     		.align	2
 399              	.L26:
 400 0234 80F00F40 		.word	1074786432
 401 0238 00000000 		.word	TFC_Ticker
 402 023c 00F10F40 		.word	1074786560
 403 0240 00000000 		.word	LineScanImageReady
 404 0244 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 405 0248 00000000 		.word	.LC3
 406 024c 04000000 		.word	.LC5
 407 0250 00000000 		.word	LineScanImage0
 408 0254 08000000 		.word	.LC8
 409 0258 9A99993E 		.word	1050253722
 410              		.cfi_endproc
 411              	.LFE0:
 413              		.text
 414              	.Letext0:
 415              		.file 2 "C:/Freescale/CW MCU v10.4/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 416              		.file 3 "C:/Users/neko/workspace/FRDM-TFC/Project_Headers/MKL25Z4.h"
 417              		.file 4 "C:/Users/neko/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_Queue.h"
 418              		.file 5 "C:/Users/neko/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_ARM_SysTick.h"
 419              		.file 6 "C:/Users/neko/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_LineScanCamera.h"
 420              		.file 7 "C:/Users/neko/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_UART.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\neko\AppData\Local\Temp\cc5B5rC5.s:18     .rodata:00000000 $d
C:\Users\neko\AppData\Local\Temp\cc5B5rC5.s:30     .text.main:00000000 $t
C:\Users\neko\AppData\Local\Temp\cc5B5rC5.s:35     .text.main:00000000 main
C:\Users\neko\AppData\Local\Temp\cc5B5rC5.s:400    .text.main:00000234 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_i2f
__aeabi_fdiv
TFC_Init
TFC_Task
TFC_SetMotorPWM
TFC_SetServo
TFC_ReadPot
TFC_SetBatteryLED_Level
Qprintf
TFC_Ticker
LineScanImageReady
SDA_SERIAL_OUTGOING_QUEUE
LineScanImage0
